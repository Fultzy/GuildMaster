<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="IconImageBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABNpJREFUeF7lW02PFEUYHiMqqEBEl5WZHrJsdwezR/cH4M148SPRmGA8QPjKEkjc
        8Jk1EFiIrBiNxCDhwsWdGA5cOZg1XozxSrhx4GN3gZ3uHlz5CCwL5fvMvLUOzZvZnpnume7UkzzZTnXV
        +z5PbXd1VU91LouYD8Y/A1Uu90JQcIbV3Qurn/ilfURV4/h+da/Uy9XjBxJ7ReeHanI65uKOIdwB90e3
        XXzql37THUDHf9PfIa4eLyjpi2XL/tG3HAUGeXvPeSrj04lDBb9Y2ujs+xtG7303pB5dPK7mb5x7oMuJ
        s0+D0p+PvdK33CweXB4YeNm33FPafB33q9x7S7haonjilc5ro48mxhQ6YG7ihJq/dk6bB8t0Ffweawdc
        7etb6hednwTzNRacg4o6iKsnAjJ2o85klY8v/6zuDm9Uc3+c/L+8PD6hvF+/4Gbt43Zv72tk/rRovJ4F
        ++skOwGx5y6dXuiEyuC7anbzR2p2y8fqzgcb1P0T26vlD8589dfDC4f7uFl78N5av9wr2mdEwwIDy9mi
        coMvcfPYgJiIDdONOgDEsd+//iy0c/PWUO4ZeN2znLOS0Ub08s6HcV4JiIWY4Tzhzgifh3Z44DDNIVjl
        rAgK9tFw0Oi0P7niOK9wuJaBGIgl5XhYGlnoAAyIUh14gBcOFw2V/v6VlYJ7TArYDOkZ/SkGTw7bNNAW
        MaTYGPy0eU2USXXhBZ44bGP8s3btG37e+UYK1AppnvD5pGUt4/CRgTZoK8XUxH9dm8fVINVZIHmCNw4v
        49/CO2/S5TYmBmiDFcvdOL1mzaucZlGgLtpIseq52BjwPO0xeOQ0z+LW205PYLkn5Ybt807B+VJF6ATU
        QV0pRhyER3jldDXMrF7XS/fa91KDOBnk3U2NRmWcQx2pbZyEV3jmtDTo0VRWqpgEq/MEoRNQhnNSmyQI
        z5yaet6yd1HhVLhSUqRReXv9JAXHKJPqJsQpeOb0NdBUd4hOTIYqJsZK3hmqzjWIOJbqJMRJeGXbz8Ir
        ujuowvVQgwRp765ROpcIr8Mj25XhFextftG9KjTONskTvLHNxqA5NA1G9k0xUCZp34QnthcNtALcQw0D
        OWCWaAfwwraaA102WA/4zwfNDH14YDutgS6dI/R89oTgqSY0QzvbaA8U6BAFLYeTpJhlaGb58cAv2iMU
        eCaUKI2cgVaWHS8o+AGaRNwOJUwPa9oOsNxk4Fn2Xi+FnQBN0MYykwUlG6Z77JYkpBuEFmhieZ1B2XJ3
        U493fbIEDdDCsjoLuud2kojpsKgOchoaWE53wAuoji2l6zi16MKmU6DLcCsJ6thSmjiJnJy++zC6A4y+
        BYweBI1+DBo9EaIeN3cqTInMXQwZvRzGywUKbOYLEQpk7isxo1+KGv1anC4dc38YMfqnMV7YmPnjKE0i
        zP153PgNEsZvkTF+kxRg9DY5jaxtlGyeDTZKamRpq2xTjLJVViMLm6WbIbxE3iytUX1Gp3y7fBS2tF1e
        A6MyzaFT+8HEYoT2Rk+dSMAkJU2fzEg5JUJz/WSrLaTpoynkEHPXk7RCMzeLB2n4bA6odYJzUNQAksZ2
        Bt6GSMOHkwByIWdIA9E9BY1cLRl0+9NZDeREbq0DmqCNTycLfLTsdfHjaQ3khgZo6aaODCOX+w+83wKy
        dp5xtwAAAABJRU5ErkJggg==
</value>
  </data>
</root>